# Network Policies for enhanced security
---
# Default deny all ingress traffic in media namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-ingress
  namespace: media
spec:
  podSelector: {}
  policyTypes:
  - Ingress

---
# Allow ingress from Traefik namespace to media namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-traefik-ingress
  namespace: media
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: traefik
  # Allow DNS traffic to AdGuard from anywhere (required for DNS service)
  - to:
    - podSelector:
        matchLabels:
          app: adguard
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53

---
# Allow inter-pod communication within media namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-media-internal
  namespace: media
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: media

---
# Default deny all ingress traffic in traefik namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-ingress
  namespace: traefik
spec:
  podSelector: {}
  policyTypes:
  - Ingress

---
# Allow external traffic to Traefik (required for ingress controller)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-external-traefik
  namespace: traefik
spec:
  podSelector:
    matchLabels:
      app: traefik
  policyTypes:
  - Ingress
  ingress:
  - {} # Allow all ingress to Traefik (it's an ingress controller)

---
# Allow egress for DNS resolution and external API calls
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns-egress
  namespace: media
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS for external API calls (music databases, etc.)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow HTTP for external API calls
  - to: []
    ports:
    - protocol: TCP
      port: 80

---
# Allow egress for Traefik namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-traefik-egress
  namespace: traefik
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS for Let's Encrypt and external services
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow HTTP for Let's Encrypt challenges
  - to: []
    ports:
    - protocol: TCP
      port: 80
  # Allow communication to media namespace
  - to:
    - namespaceSelector:
        matchLabels:
          name: media